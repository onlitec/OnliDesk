name: OnliDesk CI/CD

on:
  push:
    branches: [ main, server-implementation, develop ]
  pull_request:
    branches: [ main ]

env:
  DOTNET_VERSION: '9.0.x'

jobs:
  test-server:
    name: 🧪 Test Server
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🔧 Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: 📦 Restore dependencies
      run: dotnet restore RiderProjects/OliAcessoRemoto.Servidor/OliAcessoRemoto.Servidor/OliAcessoRemoto.Servidor/
      
    - name: 🏗️ Build server
      run: dotnet build RiderProjects/OliAcessoRemoto.Servidor/OliAcessoRemoto.Servidor/OliAcessoRemoto.Servidor/ --no-restore --configuration Release
      
    - name: 🧪 Run server tests
      run: dotnet test RiderProjects/OliAcessoRemoto.Servidor/OliAcessoRemoto.Servidor/OliAcessoRemoto.Servidor/ --no-build --configuration Release --verbosity normal
      
    - name: 🔍 Health check test
      run: |
        cd RiderProjects/OliAcessoRemoto.Servidor/OliAcessoRemoto.Servidor/OliAcessoRemoto.Servidor/
        dotnet run --configuration Release &
        sleep 10
        curl -f http://localhost:5165/health || exit 1
        pkill -f dotnet

  test-client:
    name: 🖥️ Test Client
    runs-on: windows-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🔧 Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: 📦 Restore dependencies
      run: dotnet restore RiderProjects/OliAcessoRemoto/
      
    - name: 🏗️ Build client
      run: dotnet build RiderProjects/OliAcessoRemoto/ --no-restore --configuration Release

  build-and-publish:
    name: 🚀 Build and Publish
    needs: [test-server, test-client]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🔧 Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: 📦 Publish server
      run: |
        dotnet publish RiderProjects/OliAcessoRemoto.Servidor/OliAcessoRemoto.Servidor/OliAcessoRemoto.Servidor/ \
          --configuration Release \
          --runtime linux-x64 \
          --self-contained true \
          --output ./publish/server/
          
    - name: 📦 Publish client
      run: |
        dotnet publish RiderProjects/OliAcessoRemoto/ \
          --configuration Release \
          --runtime win-x64 \
          --self-contained true \
          --output ./publish/client/
          
    - name: 📤 Upload server artifacts
      uses: actions/upload-artifact@v4
      with:
        name: onlidesk-server
        path: ./publish/server/
        
    - name: 📤 Upload client artifacts
      uses: actions/upload-artifact@v4
      with:
        name: onlidesk-client
        path: ./publish/client/

  security-scan:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🔍 Run security scan
      uses: securecodewarrior/github-action-add-sarif@v1
      with:
        sarif-file: 'security-scan-results.sarif'
